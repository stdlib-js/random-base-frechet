// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import{factory as d}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@esm/index.mjs";import{isPrimitive as h}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import{isPrimitive as u}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-pow@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ln@esm/index.mjs";function c(e,t,s){return!h(e)||j(e)?new TypeError(p("invalid argument. First argument must be a positive number and not NaN. Value: `%s`.",e)):!h(t)||j(t)?new TypeError(p("invalid argument. Second argument must be a positive number and not NaN. Value: `%s`.",t)):!u(s)||j(s)?new TypeError(p("invalid argument. Third argument must be a number and not NaN. Value: `%s`.",s)):null}function b(e,t,s,n){return n+s*f(-g(e()),-1/t)}function v(){var h,u,j,f,g,v,x;if(0===arguments.length)j=d();else if(1===arguments.length){if(!n(u=arguments[0]))throw new TypeError(p("0P32h",u));if(i(u,"prng")){if(!r(u.prng))throw new TypeError(p("0P37M","prng",u.prng));j=u.prng}else j=d(u)}else{if(g=c(h=arguments[0],v=arguments[1],x=arguments[2]))throw g;if(arguments.length>3){if(!n(u=arguments[3]))throw new TypeError(p("0P32h",u));if(i(u,"prng")){if(!r(u.prng))throw new TypeError(p("0P37M","prng",u.prng));j=u.prng}else j=d(u)}else j=d()}return e(f=void 0===h?G:M,"NAME","frechet"),u&&u.prng?(e(f,"seed",null),e(f,"seedLength",null),s(f,"state",o(null),m),e(f,"stateLength",null),e(f,"byteLength",null),e(f,"toJSON",o(null)),e(f,"PRNG",j)):(t(f,"seed",y),t(f,"seedLength",w),s(f,"state",L,P),t(f,"stateLength",N),t(f,"byteLength",E),e(f,"toJSON",T),e(f,"PRNG",j),j=j.normalized),f;function y(){return j.seed}function w(){return j.seedLength}function N(){return j.stateLength}function E(){return j.byteLength}function L(){return j.state}function P(e){j.state=e}function T(){var e={type:"PRNG"};return e.name=f.NAME,e.state=a(j.state),e.params=void 0===h?[]:[h,v,x],e}function M(){return b(j,h,v,x)}function G(e,t,s){return l(e)||l(t)||l(s)||e<=0||t<=0?NaN:b(j,e,t,s)}}var x=v();e(x,"factory",v);export{x as default,v as factory};
//# sourceMappingURL=index.mjs.map
