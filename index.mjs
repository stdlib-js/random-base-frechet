// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-pow@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ln@esm/index.mjs";var c=u.isPrimitive,b=h.isPrimitive,v=j;var x=function(e,t,n){return!c(e)||v(e)?new TypeError("invalid argument. First argument must be a positive number primitive and not `NaN`. Value: `"+e+"`."):!c(t)||v(t)?new TypeError("invalid argument. Second argument must be a positive number primitive and not `NaN`. Value: `"+t+"`."):!b(n)||v(n)?new TypeError("invalid argument. Third argument must be a number primitive and not `NaN`. Value: `"+n+"`."):null},y=g,w=f;var N=function(e,t,n,s){return s+n*y(-w(e()),-1/t)},E=e,L=t,T=n,O=s,P=r,V=i,G=o,R=m,S=d.factory,A=a,J=l,M=p,z=x,F=N;var k=function(){var e,t,n,s,r,i,o;if(0===arguments.length)n=S();else if(1===arguments.length){if(!O(t=arguments[0]))throw new TypeError(M("invalid argument. Options argument must be an object. Value: `%s`.",t));if(V(t,"prng")){if(!P(t.prng))throw new TypeError(M("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",t.prng));n=t.prng}else n=S(t)}else{if(r=z(e=arguments[0],i=arguments[1],o=arguments[2]))throw r;if(arguments.length>3){if(!O(t=arguments[3]))throw new TypeError(M("invalid argument. Options argument must be an object. Value: `%s`.",t));if(V(t,"prng")){if(!P(t.prng))throw new TypeError(M("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",t.prng));n=t.prng}else n=S(t)}else n=S()}return E(s=void 0===e?g:j,"NAME","frechet"),t&&t.prng?(E(s,"seed",null),E(s,"seedLength",null),T(s,"state",G(null),R),E(s,"stateLength",null),E(s,"byteLength",null),E(s,"toJSON",G(null)),E(s,"PRNG",n)):(L(s,"seed",m),L(s,"seedLength",d),T(s,"state",p,u),L(s,"stateLength",a),L(s,"byteLength",l),E(s,"toJSON",h),E(s,"PRNG",n),n=n.normalized),s;function m(){return n.seed}function d(){return n.seedLength}function a(){return n.stateLength}function l(){return n.byteLength}function p(){return n.state}function u(e){n.state=e}function h(){var t={type:"PRNG"};return t.name=s.NAME,t.state=J(n.state),t.params=void 0===e?[]:[e,i,o],t}function j(){return F(n,e,i,o)}function g(e,t,s){return A(e)||A(t)||A(s)||e<=0||t<=0?NaN:F(n,e,t,s)}},q=k(),B=k;e(q,"factory",B);var C=q;export{C as default,B as factory};
//# sourceMappingURL=index.mjs.map
