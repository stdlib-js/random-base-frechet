// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@v0.1.1-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@v0.1.1-esm/index.mjs";import{factory as d}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@v0.1.0-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@v0.1.1-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@v0.1.0-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import{isPrimitive as u}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@v0.1.1-esm/index.mjs";import{isPrimitive as h}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@v0.1.1-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@v0.1.1-esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-pow@v0.1.0-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ln@esm/index.mjs";function v(e,t,n){return!u(e)||j(e)?new TypeError(p("invalid argument. First argument must be a positive number and not NaN. Value: `%s`.",e)):!u(t)||j(t)?new TypeError(p("invalid argument. Second argument must be a positive number and not NaN. Value: `%s`.",t)):!h(n)||j(n)?new TypeError(p("invalid argument. Third argument must be a number and not NaN. Value: `%s`.",n)):null}function c(e,t,n,s){return s+n*g(-f(e()),-1/t)}function b(){var u,h,j,g,f,b,x;if(0===arguments.length)j=d();else if(1===arguments.length){if(!s(h=arguments[0]))throw new TypeError(p("invalid argument. Options argument must be an object. Value: `%s`.",h));if(i(h,"prng")){if(!r(h.prng))throw new TypeError(p("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",h.prng));j=h.prng}else j=d(h)}else{if(f=v(u=arguments[0],b=arguments[1],x=arguments[2]))throw f;if(arguments.length>3){if(!s(h=arguments[3]))throw new TypeError(p("invalid argument. Options argument must be an object. Value: `%s`.",h));if(i(h,"prng")){if(!r(h.prng))throw new TypeError(p("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",h.prng));j=h.prng}else j=d(h)}else j=d()}return e(g=void 0===u?P:V,"NAME","frechet"),h&&h.prng?(e(g,"seed",null),e(g,"seedLength",null),n(g,"state",o(null),m),e(g,"stateLength",null),e(g,"byteLength",null),e(g,"toJSON",o(null)),e(g,"PRNG",j)):(t(g,"seed",y),t(g,"seedLength",w),n(g,"state",L,T),t(g,"stateLength",N),t(g,"byteLength",E),e(g,"toJSON",O),e(g,"PRNG",j),j=j.normalized),g;function y(){return j.seed}function w(){return j.seedLength}function N(){return j.stateLength}function E(){return j.byteLength}function L(){return j.state}function T(e){j.state=e}function O(){var e={type:"PRNG"};return e.name=g.NAME,e.state=l(j.state),e.params=void 0===u?[]:[u,b,x],e}function V(){return c(j,u,b,x)}function P(e,t,n){return a(e)||a(t)||a(n)||e<=0||t<=0?NaN:c(j,e,t,n)}}var x=b();e(x,"factory",b);export{x as default,b as factory};
//# sourceMappingURL=index.mjs.map
