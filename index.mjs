// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-pow@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ln@esm/index.mjs";var c=u.isPrimitive,b=h.isPrimitive,v=j,x=p;var y=function(e,t,n){return!c(e)||v(e)?new TypeError(x("invalid argument. First argument must be a positive number primitive and not `NaN`. Value: `%s`.",e)):!c(t)||v(t)?new TypeError(x("invalid argument. Second argument must be a positive number primitive and not `NaN`. Value: `%s`.",t)):!b(n)||v(n)?new TypeError(x("invalid argument. Third argument must be a number primitive and not `NaN`. Value: `%s`.",n)):null},w=g,N=f;var E=function(e,t,n,s){return s+n*w(-N(e()),-1/t)},L=e,T=t,O=n,P=s,V=r,G=i,R=o,S=m,A=d.factory,J=a,M=l,z=p,F=y,k=E;var q=function(){var e,t,n,s,r,i,o;if(0===arguments.length)n=A();else if(1===arguments.length){if(!P(t=arguments[0]))throw new TypeError(z("invalid argument. Options argument must be an object. Value: `%s`.",t));if(G(t,"prng")){if(!V(t.prng))throw new TypeError(z("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",t.prng));n=t.prng}else n=A(t)}else{if(r=F(e=arguments[0],i=arguments[1],o=arguments[2]))throw r;if(arguments.length>3){if(!P(t=arguments[3]))throw new TypeError(z("invalid argument. Options argument must be an object. Value: `%s`.",t));if(G(t,"prng")){if(!V(t.prng))throw new TypeError(z("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",t.prng));n=t.prng}else n=A(t)}else n=A()}return L(s=void 0===e?g:j,"NAME","frechet"),t&&t.prng?(L(s,"seed",null),L(s,"seedLength",null),O(s,"state",R(null),S),L(s,"stateLength",null),L(s,"byteLength",null),L(s,"toJSON",R(null)),L(s,"PRNG",n)):(T(s,"seed",m),T(s,"seedLength",d),O(s,"state",p,u),T(s,"stateLength",a),T(s,"byteLength",l),L(s,"toJSON",h),L(s,"PRNG",n),n=n.normalized),s;function m(){return n.seed}function d(){return n.seedLength}function a(){return n.stateLength}function l(){return n.byteLength}function p(){return n.state}function u(e){n.state=e}function h(){var t={type:"PRNG"};return t.name=s.NAME,t.state=M(n.state),t.params=void 0===e?[]:[e,i,o],t}function j(){return k(n,e,i,o)}function g(e,t,s){return J(e)||J(t)||J(s)||e<=0||t<=0?NaN:k(n,e,t,s)}},B=q(),C=q;e(B,"factory",C);var D=B;export{D as default,C as factory};
//# sourceMappingURL=index.mjs.map
