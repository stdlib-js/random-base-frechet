// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-pow@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ln@esm/index.mjs";var f=p.isPrimitive,c=u.isPrimitive,b=h;var v=function(e,t,n){return!f(e)||b(e)?new TypeError("invalid argument. First argument must be a positive number primitive and not `NaN`. Value: `"+e+"`."):!f(t)||b(t)?new TypeError("invalid argument. Second argument must be a positive number primitive and not `NaN`. Value: `"+t+"`."):!c(n)||b(n)?new TypeError("invalid argument. Third argument must be a number primitive and not `NaN`. Value: `"+n+"`."):null},y=j,x=g;var w=function(e,t,n,r){return r+n*y(-x(e()),-1/t)},N=e,E=t,L=n,T=r,O=s,P=i,V=o,G=m,R=d.factory,S=a,A=l,J=v,M=w;var z=function(){var e,t,n,r,s,i,o;if(0===arguments.length)n=R();else if(1===arguments.length){if(!T(t=arguments[0]))throw new TypeError("invalid argument. Options argument must be an object. Value: `"+t+"`.");if(P(t,"prng")){if(!O(t.prng))throw new TypeError("invalid option. `prng` option must be a pseudorandom number generator function. Option: `"+t.prng+"`.");n=t.prng}else n=R(t)}else{if(s=J(e=arguments[0],i=arguments[1],o=arguments[2]))throw s;if(arguments.length>3){if(!T(t=arguments[3]))throw new TypeError("invalid argument. Options argument must be an object. Value: `"+t+"`.");if(P(t,"prng")){if(!O(t.prng))throw new TypeError("invalid option. `prng` option must be a pseudorandom number generator function. Option: `"+t.prng+"`.");n=t.prng}else n=R(t)}else n=R()}return N(r=void 0===e?g:j,"NAME","frechet"),t&&t.prng?(N(r,"seed",null),N(r,"seedLength",null),L(r,"state",V(null),G),N(r,"stateLength",null),N(r,"byteLength",null),N(r,"toJSON",V(null)),N(r,"PRNG",n)):(E(r,"seed",m),E(r,"seedLength",d),L(r,"state",p,u),E(r,"stateLength",a),E(r,"byteLength",l),N(r,"toJSON",h),N(r,"PRNG",n),n=n.normalized),r;function m(){return n.seed}function d(){return n.seedLength}function a(){return n.stateLength}function l(){return n.byteLength}function p(){return n.state}function u(e){n.state=e}function h(){var t={type:"PRNG"};return t.name=r.NAME,t.state=A(n.state),t.params=void 0===e?[]:[e,i,o],t}function j(){return M(n,e,i,o)}function g(e,t,r){return S(e)||S(t)||S(r)||e<=0||t<=0?NaN:M(n,e,t,r)}},F=z(),k=z;e(F,"factory",k);var q=F;export{q as default,k as factory};
//# sourceMappingURL=index.mjs.map
